{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["initialBoards","id","title","items","name","App","useState","boards","setBoards","currentItem","setCurrentItem","currentBoard","setCurrentBoard","dragOverHandler","e","preventDefault","currentTarget","className","map","board","onDragOver","onDrop","indexOf","push","currentIndex","splice","b","dropCardHandler","item","onDragLeave","dragLeaveHandler","onDragStart","dragStartHandler","onDragEnd","dragEndHandler","console","log","dropIndex","length","dropHandler","draggable","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8553f220.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\n\nconst initialBoards = [\n    {\n        id: 10, title: \"Users\", items: [{id: 1, name: 'Victor'}, {id: 3, name: 'Semen'}, {id: 4, name: 'Mariya'}\n        ]\n    },\n    {id: 22, title: \"Mentors\", items: [{id: 2, name: 'Lena'}, {id: 5, name: 'Yuriy'}]}\n]\ntype InitialTypes = Array<BoarsTypes>\ntype BoarsTypes = {\n    id: number\n    title: string\n    items: Array<{ id: number, name: string }>\n}\n\ntype ItemType = { id: number; name: string };\n\nfunction App() {\n    const [boards, setBoards] = useState<InitialTypes>(initialBoards)\n    const [currentItem, setCurrentItem] = useState<null | ItemType>(null)\n    const [currentBoard, setCurrentBoard] = useState<null | BoarsTypes>(null)\n\n\n    function dragOverHandler(e: React.DragEvent<HTMLDivElement>) {\n        e.preventDefault()\n\n        if (e.currentTarget.className === 'item') {\n            e.currentTarget.className = 'item active_item'\n        }\n    }\n\n    function dragLeaveHandler(e: React.DragEvent<HTMLDivElement>) {\n        e.currentTarget.className = 'item'\n    }\n\n    function dropHandler(e: React.DragEvent<HTMLDivElement>, board: BoarsTypes, item: ItemType) {\n        e.preventDefault()\n        console.log('item')\n        if (currentItem && currentBoard) {\n            const currentIndex = currentBoard.items.indexOf(currentItem)\n            const dropIndex = board.items.indexOf(item)\n            currentBoard.items.splice(currentIndex, 1)\n            if (currentIndex === board.items.length) {\n                board.items.splice(dropIndex, 0, currentItem)\n            } else {\n                board.items.splice(dropIndex, 0, currentItem)\n\n            }\n            setBoards(boards.map(b => {\n                if (b.id === board.id) {\n                    return board\n                }\n                if (b.id === currentBoard.id) {\n                    return currentBoard\n                }\n                return b\n            }))\n        }\n        e.currentTarget.className = 'item'\n    }\n\n    function dragStartHandler(e: React.DragEvent<HTMLDivElement>, board: BoarsTypes, item: ItemType) {\n        setCurrentBoard(board)\n        setCurrentItem(item)\n    }\n\n    function dragEndHandler(e: React.DragEvent<HTMLDivElement>) {\n        e.currentTarget.className = 'item'\n    }\n\n    function dropCardHandler(e: React.DragEvent<HTMLDivElement>, board: BoarsTypes) {\n        e.preventDefault()\n        if (currentBoard && currentItem) {\n            if (board.items.indexOf(currentItem) < 0) {\n                board.items.push(currentItem)\n                const currentIndex = currentBoard.items.indexOf(currentItem)\n                currentBoard.items.splice(currentIndex, 1)\n                setBoards(boards.map(b => {\n\n                    if (b.id === board.id) {\n                        return board\n                    }\n                    if (b.id === currentBoard.id) {\n                        return currentBoard\n                    }\n                    return b\n                }))\n            } else {\n                return\n            }\n\n        }\n\n\n    }\n\n    return (\n        <div className=\"app\">\n            {boards.map(board =>\n                <div\n                    className='board'\n                    key={board.id + board.title}\n                    onDragOver={(e) => dragOverHandler(e)}\n                    onDrop={(e) => dropCardHandler(e, board)}\n                >\n                    <div className=\"title\">{board.title}</div>\n                    {board.items.map(item =>\n                        <div\n                            className='item'\n                            key={item.id + item.name}\n                            onDragOver={(e) => dragOverHandler(e)}\n                            onDragLeave={((e) => dragLeaveHandler(e))}\n                            onDragStart={(e) => dragStartHandler(e, board, item)}\n                            onDragEnd={(e) => dragEndHandler(e)}\n                            onDrop={(e) => dropHandler(e, board, item)}\n                            draggable={true}\n                        >\n\n                            {item.name}\n                        </div>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}